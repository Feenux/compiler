package gals;

public interface ParserConstants
{
    int START_SYMBOL = 42;

    int FIRST_NON_TERMINAL    = 42;
    int FIRST_SEMANTIC_ACTION = 80;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1,  2,  2,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1,  3,  3,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1,  5, -1, -1, -1, -1, -1, -1,  5,  5,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1,  6, -1, -1, -1, -1, -1, -1,  6,  6,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1,  8, -1, -1, -1, -1, -1, -1,  7,  7,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 10,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, 14, 14, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 17, -1, -1, -1, 17, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, 17, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, 16, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 18, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 20, -1, -1, -1, 20, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, 20, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, 19, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 21, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, 29, -1, -1, -1, -1, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 35, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, 35, -1, -1, 35, -1, 35, 35, 35, -1, -1, -1, -1, -1, -1, 35, -1, -1, 35, 35, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 39, -1, -1, -1, 39, -1, -1, 39, 40, -1, -1, -1, -1, -1, -1, 39, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 42, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, 42, -1, -1, 42, -1, 42, 42, 42, -1, -1, -1, -1, -1, -1, 42, -1, -1, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 43, -1, 44, -1, 43, -1, -1, 43, -1, -1, -1, -1, -1, -1, 45, 43, -1, 43, -1, -1, -1, -1, 43, -1, 43, -1, 43, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 46, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, 49, -1, -1, 47, -1, 46, 46, 46, -1, -1, -1, -1, -1, -1, 46, -1, -1, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, 50, -1, -1, -1, -1, -1, -1, 50, -1, -1, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 51, -1, 51, -1, 51, -1, -1, 51, -1, -1, -1, -1, -1, -1, 51, 51, -1, 51, -1, -1, -1, -1, 51, -1, 51, -1, 51, 51, 51, -1, -1, -1, -1, -1, 52, 52, 52, 52, 52, 52 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 54, 55, 56, 57, 58 },
        { -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 59, 59, -1, -1, -1, -1, -1, -1, 59, -1, -1, 59, 59, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 60, -1, 60, -1, 60, -1, -1, 60, -1, -1, -1, -1, -1, -1, 60, 60, -1, 60, -1, -1, -1, -1, 60, -1, 60, -1, 60, 60, 60, -1, 61, 62, -1, -1, 60, 60, 60, 60, 60, 60 },
        { -1, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 63, 63, -1, -1, -1, -1, -1, -1, 63, -1, -1, 63, 63, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 64, -1, 64, -1, 64, -1, -1, 64, -1, -1, -1, -1, -1, -1, 64, 64, -1, 64, -1, -1, -1, -1, 64, -1, 64, -1, 64, 64, 64, -1, 64, 64, 65, 66, 64, 64, 64, 64, 64, 64 },
        { -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 69, 70, -1, -1, -1, -1, -1, -1, 71, -1, -1, 72, 73, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 74, -1, 74, -1, 74, -1, -1, 74, -1, -1, -1, -1, -1, -1, 74, 74, -1, 74, -1, -1, -1, -1, 74, 75, 74, -1, 74, 74, 74, -1, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74 }
    };

    int[][] PRODUCTIONS = 
    {
        { 43, 27, 52, 28 },
        {  0 },
        { 44 },
        { 46, 45 },
        {  0 },
        { 44 },
        { 47, 23, 50 },
        { 48 },
        { 49 },
        { 14 },
        { 13 },
        { 12 },
        {  5, 25, 48, 24, 20, 26 },
        {  2, 51 },
        {  0 },
        { 24, 50 },
        {  0 },
        { 53 },
        { 55, 54 },
        {  0 },
        { 53 },
        { 56 },
        { 59 },
        { 62 },
        { 65 },
        { 67 },
        { 57, 31, 68 },
        {  2, 58 },
        {  0 },
        { 25, 68, 26 },
        { 17, 29, 60, 30 },
        { 57, 61 },
        {  0 },
        { 24, 60 },
        { 19, 29, 63, 30 },
        { 68, 64 },
        {  0 },
        { 24, 63 },
        { 29, 68, 30, 11, 27, 52, 28, 66 },
        {  0 },
        { 10, 27, 52, 28 },
        {  6, 27, 52,  9, 29, 68, 30,  7, 52, 28 },
        { 70, 69 },
        {  0 },
        {  4, 70, 69 },
        { 16, 70, 69 },
        { 71 },
        { 18 },
        {  8 },
        { 15, 70 },
        { 74, 72 },
        {  0 },
        { 73, 74 },
        { 36 },
        { 37 },
        { 38 },
        { 39 },
        { 40 },
        { 41 },
        { 76, 75 },
        {  0 },
        { 32, 76, 75 },
        { 33, 76, 75 },
        { 78, 77 },
        {  0 },
        { 34, 78, 77 },
        { 35, 78, 77 },
        {  2, 79 },
        { 20 },
        { 21 },
        { 22 },
        { 29, 68, 30 },
        { 32, 78 },
        { 33, 78 },
        {  0 },
        { 25, 68, 26 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado identificador",
        "Era esperado reservada",
        "Era esperado and",
        "Era esperado array",
        "Era esperado do",
        "Era esperado exit",
        "Era esperado false",
        "Era esperado if",
        "Era esperado ifFalseDo",
        "Era esperado ifTrueDo",
        "Era esperado literal",
        "Era esperado logical",
        "Era esperado number",
        "Era esperado not",
        "Era esperado or",
        "Era esperado read",
        "Era esperado true",
        "Era esperado write",
        "Era esperado constante_numerica",
        "Era esperado constante_caractere",
        "Era esperado constante_literal",
        "Era esperado \":\"",
        "Era esperado \",\"",
        "Era esperado \"[\"",
        "Era esperado \"]\"",
        "Era esperado \"{\"",
        "Era esperado \"}\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \":=\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \"=\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \"<=\"",
        "Era esperado \">\"",
        "Era esperado \">=\"",
        "<program> inválido",
        "<declaracao_variaveis_opt> inválido",
        "<declaracao_variaveis> inválido",
        "<declaracao_variaveis_1> inválido",
        "<variavel> inválido",
        "<tipo> inválido",
        "<tipo_simples> inválido",
        "<array> inválido",
        "<lista_identificadores> inválido",
        "<lista_identificadores_1> inválido",
        "<lista_comandos_opt> inválido",
        "<lista_comandos> inválido",
        "<lista_comandos_1> inválido",
        "<comando> inválido",
        "<atribuicao> inválido",
        "<identificador_complexo> inválido",
        "<acesso_array> inválido",
        "<entrada_dados> inválido",
        "<lista_identificadores_complexos> inválido",
        "<lista_identificadores_complexos_1> inválido",
        "<saida_dados> inválido",
        "<lista_expressoes> inválido",
        "<lista_expressoes_1> inválido",
        "<selecao> inválido",
        "<selecao_false> inválido",
        "<repeticao> inválido",
        "<expressao> inválido",
        "<expressao_1> inválido",
        "<elemento> inválido",
        "<relacional> inválido",
        "<relacional_1> inválido",
        "<operador_relacional> inválido",
        "<aritmetica> inválido",
        "<aritmetica_1> inválido",
        "<termo> inválido",
        "<termo_1> inválido",
        "<fator> inválido",
        "<fator_1> inválido"
    };
}
