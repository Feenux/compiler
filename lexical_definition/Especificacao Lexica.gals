#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
Package = gals
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = LL
#RegularDefinitions
linha: "/" "/".*
#Tokens
//id
identificador: _([A-Z]|((([A-Z][a-z0-9]+)|([a-z]+[0-9]*))+[A-Z]?))

//palavra

reservada: [a-z]+([A-Z][a-z]+)* 
and = reservada: "and"
array = reservada: "array"
do = reservada: "do"
exit = reservada: "exit"
false = reservada: "false"
if = reservada: "if"
ifFalseDo = reservada: "ifFalseDo"
ifTrueDo = reservada: "ifTrueDo"
literal = reservada: "literal"
logical = reservada: "logical"
number= reservada: "number"
not = reservada: "not"
or = reservada: "or"
read = reservada: "read"
true = reservada: "true"
write = reservada: "write"

//constante numerica

constante_numerica: [0-9]+(\.[0-9]+)?

//constante caractere

constante_caractere: '(\\n | \\t | \\s)'

//constante literal

constante_literal:  \"[^ \" \n \\]*\"

//comentario de linha - olhar na especificacao como ignorar coment·rio


//simbolo especial

":"
","
"["
"]"
"{"
"}"
"("
")"
":="
"+"
"-"
"*"
"/"
"="
"!="
"<"
"<="
">"
">="

//ignorar caractere de formata√ß√£o
:[\t\n\s]
:{linha}
#NonTerminals
<program>
<declaracao_variaveis_opt>
<declaracao_variaveis>
<variavel>
<tipo>
<tipo_simples>
<array>
<lista_identificadores>
<lista_comandos_opt>
<lista_comandos>
<comando>
<atribuicao>
<identificador_complexo>
<acesso_array>
<entrada_dados>
<lista_identificadores_complexos>
<saida_dados>
<lista_expressoes>
<selecao>
<selecao_false>
<repeticao>
<expressao>
<elemento>
<relacional>
<operador_relacional>
<aritmetica>
<termo>
<fator>
#Grammar
<program> ::= <declaracao_variaveis_opt> "{" <lista_comandos_opt> "}";
<declaracao_variaveis_opt> ::= Ó | <declaracao_variaveis>;
<declaracao_variaveis> ::= <variavel> | <variavel> "," <declaracao_variaveis>;
<variavel> ::= <tipo> ":" <lista_identificadores>;
<tipo> ::= <tipo_simples> | <array>;
<tipo_simples> ::= number | logical | literal;
<array> ::= array "[" <tipo_simples> "," constante_numerica "]";
<lista_identificadores> ::= identificador | identificador "," <lista_identificadores>;
<lista_comandos_opt> ::= Ó | <lista_comandos>;
<lista_comandos> ::= <comando> | <comando> <lista_comandos>;
<comando> ::= <atribuicao> | <entrada_dados> | <saida_dados> | <selecao> | <repeticao>;
<atribuicao> ::= <identificador_complexo> ":=" <expressao>;
<identificador_complexo> ::= identificador <acesso_array>;
<acesso_array> ::= Ó | "[" <expressao> "]";
<entrada_dados> ::= read "(" <lista_identificadores_complexos> ")";
<lista_identificadores_complexos> ::= <identificador_complexo> | <identificador_complexo> "," <lista_identificadores_complexos>;
<saida_dados> ::= write "(" <lista_expressoes> ")";
<lista_expressoes> ::= <expressao> | <expressao> "," <lista_expressoes>;
<selecao> ::= "(" <expressao> ")" ifTrueDo "{" <lista_comandos_opt> "}" <selecao_false>;
<selecao_false> ::= Ó | ifFalseDo "{" <lista_comandos_opt> "}";
<repeticao> ::= do "{" <lista_comandos_opt> if "(" <expressao> ")" exit <lista_comandos_opt> "}";
<expressao> ::= <expressao> and <elemento> | <expressao> or <elemento> | <elemento>;
<elemento> ::= <relacional> | true | false | not <elemento>;
<relacional> ::= <aritmetica> <operador_relacional> <aritmetica> | <aritmetica>;
<operador_relacional> ::= "=" | "!=" | "<" | "<=" | ">" | ">=";
<aritmetica> ::= <aritmetica> "+" <termo> | <aritmetica> "-" <termo> | <termo>;
<termo> ::= <termo> "*" <fator> | <termo> "/" <fator> | <fator>;
<fator> ::= identificador | identificador "[" <expressao> "]" | constante_numerica | constante_caractere | constante_literal | "(" <expressao> ")" | "+" <fator> | "-" <fator>;
